name: Backend CI/CD

on:
  push:
    branches: [main, develop]
    paths: ['backend/**']
  pull_request:
    branches: [main, develop]
    paths: ['backend/**']
  workflow_call:

jobs:
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        python-version: [3.11, 3.12]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test_rag
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov flake8 black isort mypy

      - name: Run code formatting check
        run: |
          black --check .
          isort --check-only .

      - name: Run linter
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run type checker
        run: mypy . --ignore-missing-imports

      - name: Run tests
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test_rag
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY: test-secret-key
          OPENAI_API_KEY: test-key

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend

  backend-security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install security scanner
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Run security check
        run: |
          safety check --json
          bandit -r . -f json

  backend-build:
    runs-on: ubuntu-latest
    needs: [backend-test, backend-security]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t rag-backend:latest .

      - name: Run container health check
        run: |
          docker run -d --name test-backend -p 8000:8000 rag-backend:latest
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          docker stop test-backend
