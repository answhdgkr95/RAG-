# ==================== PROJECT CONFIGURATION ====================
project_name = "rag-system"
environment  = "prod"  # dev, staging, prod
aws_region   = "ap-northeast-2"

# ==================== NETWORK CONFIGURATION ====================
vpc_cidr = "10.0.0.0/16"

public_subnet_cidrs  = ["10.0.1.0/24", "10.0.2.0/24"]
private_subnet_cidrs = ["10.0.11.0/24", "10.0.12.0/24"]

# ==================== SECURITY CONFIGURATION ====================
# IMPORTANT: Replace with your actual IP ranges in production
# Current setting allows access from anywhere - CHANGE THIS!
allowed_cidr_blocks = [
  "0.0.0.0/0"  # CHANGE THIS: Add your office/VPN IP ranges
  # Examples:
  # "203.0.113.0/24",    # Office network
  # "198.51.100.0/24",   # VPN network
  # "192.0.2.100/32"     # Specific admin IP
]

# ==================== EKS CONFIGURATION ====================
eks_cluster_version = "1.28"

node_group_instance_types   = ["t3.medium"]
node_group_capacity_type    = "ON_DEMAND"  # ON_DEMAND or SPOT
node_group_min_size         = 1
node_group_max_size         = 5
node_group_desired_size     = 2

# ==================== DATABASE CONFIGURATION ====================
db_instance_class = "db.t3.micro"  # Upgrade to db.t3.small or larger for production
db_name           = "rag_db"
db_username       = "postgres"
db_password       = "SecurePassword123!"  # CHANGE THIS: Use strong password

# ==================== CACHE CONFIGURATION ====================
redis_node_type = "cache.t3.micro"  # Upgrade to cache.t3.small or larger for production
redis_auth_token = "SuperSecureRedisToken123!"  # CHANGE THIS: Use strong token

# ==================== APPLICATION CONFIGURATION ====================
app_domain = "rag-system.your-domain.com"  # CHANGE THIS: Use your actual domain

# ==================== API KEYS (SENSITIVE) ====================
# Store these in environment variables or AWS Secrets Manager in production
openai_api_key = "sk-..."  # CHANGE THIS: Your actual OpenAI API key

# ==================== PRODUCTION SECURITY NOTES ====================
# 1. allowed_cidr_blocks: Restrict to specific IP ranges
# 2. db_password: Use AWS Secrets Manager or random passwords
# 3. redis_auth_token: Generate cryptographically secure token
# 4. openai_api_key: Store in AWS Secrets Manager
# 5. Enable AWS CloudTrail for audit logging
# 6. Consider using AWS Config for compliance monitoring
# 7. Setup AWS GuardDuty for threat detection 