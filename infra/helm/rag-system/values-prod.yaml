# Production environment specific values

# Global settings
global:
  imageRegistry: ""

# Service Account
serviceAccount:
  annotations:
    # IRSA role ARN will be set during deployment
    # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/rag-system-rag-app-role

# Configuration for production
config:
  environment: "prod"
  logLevel: "info"

# Frontend configuration
frontend:
  replicaCount: 3
  
  image:
    tag: "v1.0.0"
  
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rate-limit: "100"
      nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    hosts:
      - host: rag-system.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: rag-system-tls
        hosts:
          - rag-system.example.com
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

# Backend configuration
backend:
  replicaCount: 3
  
  image:
    tag: "v1.0.0"
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

# Enable autoscaling in production
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Production monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true

# Enable Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2 