{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rag-system.fullname" . }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "rag-system.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "rag-system.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rag-system.backend.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "rag-system.serviceAccountName" . }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: backend
          image: {{ include "rag-system.backend.image" . }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          env:
            # Configuration from ConfigMap
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: DB_USERNAME
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: REDIS_PORT
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: AWS_REGION
            - name: S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: S3_BUCKET_NAME
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "rag-system.fullname" . }}-config
                  key: LOG_LEVEL
            
            # Sensitive configuration from Secrets
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "rag-system.fullname" . }}-secrets
                  key: database-password
            - name: REDIS_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "rag-system.fullname" . }}-secrets
                  key: redis-auth-token
                  optional: true
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "rag-system.fullname" . }}-secrets
                  key: openai-api-key
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "rag-system.fullname" . }}-secrets
                  key: jwt-secret
            
            # Additional environment variables
            {{- range .Values.backend.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
          
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          
          {{- with .Values.backend.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      
      {{- with .Values.backend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 